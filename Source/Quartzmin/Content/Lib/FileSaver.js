FileSaver = { saveAs: function () { "use strict"; var u = "object" == typeof window && window.window === window ? window : "object" == typeof self && self.self === self ? self : "object" == typeof global && global.global === global ? global : void 0; function d(e, t, o) { var n = new XMLHttpRequest; n.open("GET", e), n.responseType = "blob", n.onload = function () { a(n.response, t, o) }, n.onerror = function () { console.error("could not download file") }, n.send() } function i(e) { var t = new XMLHttpRequest; return t.open("HEAD", e, !1), t.send(), 200 <= t.status && t.status <= 299 } function l(t) { try { t.dispatchEvent(new MouseEvent("click")) } catch (e) { var o = document.createEvent("MouseEvents"); o.initMouseEvent("click", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), t.dispatchEvent(o) } } var a = u.saveAs || "object" != typeof window || window !== u ? function () { } : "download" in HTMLAnchorElement.prototype ? function (e, t, o) { var n = u.URL || u.webkitURL, a = document.createElement("a"); t = t || e.name || "download", a.download = t, a.rel = "noopener", "string" == typeof e ? (a.href = e, a.origin !== location.origin ? i(a.href) ? d(e, t, o) : l(a, a.target = "_blank") : l(a)) : (a.href = n.createObjectURL(e), setTimeout(function () { n.revokeObjectURL(a.href) }, 4e4), setTimeout(function () { l(a) }, 0)) } : "msSaveOrOpenBlob" in navigator ? function (e, t, o) { if (t = t || e.name || "download", "string" == typeof e) if (i(e)) d(e, t, o); else { var n = document.createElement("a"); n.href = e, n.target = "_blank", setTimeout(function () { l(n) }) } else navigator.msSaveOrOpenBlob((a = e, void 0 === (r = o) ? r = { autoBom: !1 } : "object" != typeof r && (console.warn("Depricated: Expected third argument to be a object"), r = { autoBom: !r }), r.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(a.type) ? new Blob([String.fromCharCode(65279), a], { type: a.type }) : a), t); var a, r } : function (e, t, o, n) { if ((n = n || open("", "_blank")) && (n.document.title = n.document.body.innerText = "downloading..."), "string" == typeof e) return d(e, t, o); var a = "application/octet-stream" === e.type, r = /constructor/i.test(u.HTMLElement) || u.safari, i = /CriOS\/[\d]+/.test(navigator.userAgent); if ((i || a && r) && "object" == typeof FileReader) { var l = new FileReader; l.onloadend = function () { var e = l.result; e = i ? e : e.replace(/^data:[^;]*;/, "data:attachment/file;"), n ? n.location.href = e : location = e, n = null }, l.readAsDataURL(e) } else { var c = u.URL || u.webkitURL, s = c.createObjectURL(e); n ? n.location = s : location.href = s, n = null, setTimeout(function () { c.revokeObjectURL(s) }, 4e4) } }; return u.saveAs = a.saveAs = a, a }() };